{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Dependency Injection for Oracle WebCenter Content (UCM)","body":"Version 0.9.1 Released\r\n----------------------\r\n- No need to wire up the Bootstrapper anymore, now Twine reads `twine.properties` inside component jars\r\n- Fixed a ClassCastException when specifying an *int* return type in Idoc functions\r\n- Cleaner handling of *Float*, *null* and *void* return types from Idoc functions\r\n\r\nWhy Twine?\r\n----------\r\n\r\n- Write UCM services, Idoc script extensions and filters using plain Java objects and annotations\r\n- Dependency injection reduces coupling, promotes cleaner methods and allows unit testing\r\n- Stop writing that same old boilerplate validation code. Ask for a Date or ResultSet and Twine will parse and validate it for you\r\n\r\nExamples\r\n--------\r\n\r\n```java\r\npublic class ExampleScriptPackage {\r\n\r\n  @IdocFunction\r\n  public String greet(String message, UserData user) {\r\n    return message + \" \" + user.getProperty(\"dFullName\") + \"!\";\r\n  }\r\n}\r\n// usage: <!--$ greet(\"Hello\") -->\r\n// result: Hello Tim Stirrat!\r\n```\r\n\r\nStop writing that same old parameter checking code:\r\n\r\n```java\r\npublic class ExampleServicePackage {\r\n\r\n  @ServiceMethod(name = \"EXAMPLE_SERVICE\")\r\n  public void example(@Binder(name = \"date\") Date date) {\r\n    // do something with date\r\n  }\r\n}\r\n// usage: ?IdcService=EXAMPLE_SERVICE&date=Hello\r\n// result: Error: Parameter 'date' must be parseable as a date\r\n```\r\n\r\nGetting Started\r\n---------------\r\nSee how to [create your first component](https://github.com/tstirrat/ucm-twine/wiki/Creating-a-Twine-component) on the [wiki](https://github.com/tstirrat/ucm-twine/wiki).","name":"Twine","google":"UA-35694884-1"}